plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm'
    id 'kotlin-kapt'
    id 'maven-publish'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    implementation project(path: ':data_builder_annotations')

    implementation "com.google.auto.service:auto-service-annotations:1.0.1"
    kapt "com.google.auto.service:auto-service:1.0.1"

    implementation 'com.squareup:kotlinpoet:1.12.0'
}

publishing {
    publications {
        maven(MavenPublication) {

            Properties pomProps = new Properties()
            pomProps.load(new FileInputStream("${projectDir}/pom.properties"))
            groupId pomProps.groupId
            artifactId pomProps.artifactId
            version pomProps.version


            artifact("$buildDir/libs/${project.getName()}.jar")

            pom {
                packaging 'jar'
                name = pomProps.artifactId
                description = 'desciption here ...'
                url = 'https://gitlab.com/l337Code/'
                developers {
                    developer {
                        id = '10164070'
                        name = 'yhj123'
                        email = 'yehaijian@lingkou.com'
                    }
                }

                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each {
                        if (it.group != null && it.name != null && it.version != null) {
                            // Check project module dependencies
                            def projectDependency = it.version == "unspecified"
                            if (projectDependency) {
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', it.group)
                                dependencyNode.appendNode('artifactId', it.name)
                                dependencyNode.appendNode('version', it.version)
                                dependencyNode.appendNode('scope', "compile")
                            } else {
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', it.group)
                                dependencyNode.appendNode('artifactId', it.name)
                                dependencyNode.appendNode('version', it.version)
                                dependencyNode.appendNode('scope', "compile")
                            }
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            // 可以有且仅有一个仓库不指定 name 属性，会隐式设置为 Maven
            // 根据 versionName 来判断仓库地址

            Properties pomProps = new Properties()
            pomProps.load(new FileInputStream("${projectDir}/pom.properties"))
            url ="https://gitlab.com/api/v4/projects/${pomProps.projectId}/packages/maven"
            name "GitLab"
            // 仓库用户名密码
            credentials(HttpHeaderCredentials) {
                name = "Private-Token"
                value = "glpat-x5o5hNYBsfybDNJx9fGz"
            }

            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}




